{"ast":null,"code":"var _jsxFileName = \"/home/mohan/dev/react/iims/client/src/components/EventDetailPage/EventDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from \"react\";\nimport classes from \"./EventDetail.module.css\";\nimport { GoLocation } from \"react-icons/go\";\nimport Scoreboard from \"../Scoreboard/Scoreboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nclass Report extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      formValid: false,\n      submitted: false,\n      errorMessage: {\n        form: \"\"\n      }\n    };\n  }\n\n  async updateQuery(data) {\n    if (data.length > 0) {\n      await this.setState({\n        query: data,\n        formValid: true\n      });\n    } else {\n      let errMsg = { ...this.state.errorMessage\n      };\n      errMsg.form = \"Report Message is required\";\n      await this.setState({\n        query: data,\n        formValid: false,\n        errorMessage: errMsg\n      });\n    }\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault(); // await this.validateForm();\n\n    if (this.state.formValid === true && this.state.submitted === false) {\n      this.setState({\n        submitted: true\n      });\n      const url = process.env.REACT_APP_API_ENDPOINT + \"report/\";\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          report: this.state.query\n        })\n      }).then(async () => {\n        await this.setState({\n          query: \"\",\n          formValid: false,\n          submitted: false,\n          errorMessage: {\n            form: \"\"\n          }\n        });\n      });\n      this.props.showSuccessMessage(true);\n    } else {\n      let errMsg = { ...this.state.errorMessage\n      };\n      errMsg.form = \"Form is invalid\";\n      await this.setState({\n        errorMessage: errMsg\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      id: \"js-form\",\n      className: classes.form,\n      onSubmit: this.handleSubmit.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(ValidationMessage, {\n        valid: this.state.formValid,\n        message: this.state.errorMessage.form\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"query\",\n          children: \"What to Report?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          id: \"query\",\n          name: \"query\",\n          className: classes.form_text_field,\n          value: this.state.query,\n          onChange: e => this.updateQuery(e.target.value),\n          rows: \"5\",\n          placeholder: \"Enter your report message here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          type: \"submit\",\n          disabled: !this.state.formValid,\n          children: \"Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst EventDetail = props => {\n  _s();\n\n  // fetch event details of event id = id\n  const [viewScoreBoard, setView] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [successImage, setSuccessImage] = useState(process.env.PUBLIC_URL + \"/images/sport.svg\");\n\n  const togglePopup = data => {\n    setShowPopup(data);\n    setShowSuccess(false);\n  };\n\n  const updateView = () => {\n    setView(!viewScoreBoard);\n  };\n\n  const [state, setState] = useState({\n    eventName: \"\",\n    desc: \"\",\n    venue: \"\",\n    dateTime: \"\",\n    participatingCollege: []\n  });\n\n  const showSuccessMessage = isSuccess => {\n    setShowSuccess(true);\n\n    if (isSuccess) {\n      setSuccessImage(process.env.PUBLIC_URL + \"/images/success.png\");\n    } else {\n      setSuccessImage(process.env.PUBLIC_URL + \"/images/cross.png\");\n    }\n  };\n\n  useEffect(() => {\n    const url = process.env.REACT_APP_API_ENDPOINT + \"event/\" + props.match.params.id;\n    fetch(url).then(async res => {\n      const eventDetails = await res.json();\n      console.log(eventDetails.dateTime);\n      eventDetails[\"scoreboard url\"] = \"/scoreboard/\";\n      eventDetails[\"scoreboard url\"] = eventDetails[\"scoreboard url\"].concat(props.match.params.id);\n      const collegedata = eventDetails.participatingCollege.map(d => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.single_college,\n          children: d\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 29\n        }, this);\n      });\n      eventDetails.participatingCollege = collegedata;\n      setState(eventDetails);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [props.match.params.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: state.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.desc,\n      children: state.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.venue,\n      children: [/*#__PURE__*/_jsxDEV(GoLocation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), state.venue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.time_and_date,\n      children: state.dateTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.participating_college,\n      children: state.participatingCollege\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.btns,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateView,\n        className: classes.view_scoreboard,\n        children: \"View ScoreBoard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.report,\n        onClick: () => togglePopup(true),\n        children: \"Report Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), showPopup ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.popup,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.popup_inner,\n          children: [showSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.succes_image,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: successImage,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(Report, {\n            showSuccessMessage: showSuccessMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.close,\n            onClick: () => togglePopup(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), viewScoreBoard ? /*#__PURE__*/_jsxDEV(Scoreboard, {\n      eventid: props.match.params.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventDetail, \"L1opN+G185Yogq8zyCkAzcCCusk=\");\n\n_c2 = EventDetail;\nexport default EventDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"EventDetail\");","map":{"version":3,"sources":["/home/mohan/dev/react/iims/client/src/components/EventDetailPage/EventDetail.js"],"names":["React","useState","useEffect","Component","classes","GoLocation","Scoreboard","ValidationMessage","props","valid","error_msg","message","Report","constructor","state","query","formValid","submitted","errorMessage","form","updateQuery","data","length","setState","errMsg","handleSubmit","e","preventDefault","url","process","env","REACT_APP_API_ENDPOINT","fetch","method","headers","body","JSON","stringify","report","then","showSuccessMessage","render","bind","form_group","label","form_text_field","target","value","btn","EventDetail","viewScoreBoard","setView","showPopup","setShowPopup","showSuccess","setShowSuccess","successImage","setSuccessImage","PUBLIC_URL","togglePopup","updateView","eventName","desc","venue","dateTime","participatingCollege","isSuccess","match","params","id","res","eventDetails","json","console","log","concat","collegedata","map","d","single_college","catch","err","container","title","name","time_and_date","participating_college","btns","view_scoreboard","popup","popup_inner","succes_image","close"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from \"react\";\nimport classes from \"./EventDetail.module.css\";\nimport { GoLocation } from \"react-icons/go\";\nimport Scoreboard from \"../Scoreboard/Scoreboard\";\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return (\n            <div className={classes.error_msg}>\n                <p>{props.message}</p>\n            </div>\n        );\n    }\n    return null;\n}\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            query: \"\",\n            formValid: false,\n            submitted: false,\n            errorMessage: {\n                form: \"\",\n            },\n        };\n    }\n\n    async updateQuery(data) {\n        if (data.length > 0) {\n            await this.setState({\n                query: data,\n                formValid: true,\n            });\n        } else {\n            let errMsg = { ...this.state.errorMessage };\n            errMsg.form = \"Report Message is required\";\n            await this.setState({\n                query: data,\n                formValid: false,\n                errorMessage: errMsg,\n            });\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        // await this.validateForm();\n        if (this.state.formValid === true && this.state.submitted === false) {\n            this.setState({\n                submitted: true,\n            });\n\n            const url = process.env.REACT_APP_API_ENDPOINT + \"report/\";\n\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    report: this.state.query,\n                }),\n            }).then(async () => {\n                await this.setState({\n                    query: \"\",\n                    formValid: false,\n                    submitted: false,\n                    errorMessage: {\n                        form: \"\",\n                    },\n                });\n            });\n            this.props.showSuccessMessage(true);\n        } else {\n            let errMsg = { ...this.state.errorMessage };\n            errMsg.form = \"Form is invalid\";\n            await this.setState({\n                errorMessage: errMsg,\n            });\n        }\n    }\n    render() {\n        return (\n            <form\n                action=\"#\"\n                id=\"js-form\"\n                className={classes.form}\n                onSubmit={this.handleSubmit.bind(this)}\n            >\n                <ValidationMessage\n                    valid={this.state.formValid}\n                    message={this.state.errorMessage.form}\n                />\n                {/* Query */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"query\">\n                        What to Report?\n                    </label>\n                    <textarea\n                        type=\"text\"\n                        id=\"query\"\n                        name=\"query\"\n                        className={classes.form_text_field}\n                        value={this.state.query}\n                        onChange={(e) => this.updateQuery(e.target.value)}\n                        rows=\"5\"\n                        placeholder=\"Enter your report message here\"\n                    />\n                </div>\n                {/* Submit */}\n                <div className=\"form-controls\">\n                    <button\n                        className={classes.btn}\n                        type=\"submit\"\n                        disabled={!this.state.formValid}\n                    >\n                        Report\n                    </button>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst EventDetail = (props) => {\n    // fetch event details of event id = id\n    const [viewScoreBoard, setView] = useState(false);\n    const [showPopup, setShowPopup] = useState(false);\n    const [showSuccess, setShowSuccess] = useState(false);\n    const [successImage, setSuccessImage] = useState(\n        process.env.PUBLIC_URL + \"/images/sport.svg\"\n    );\n\n    const togglePopup = (data) => {\n        setShowPopup(data);\n        setShowSuccess(false);\n    };\n    const updateView = () => {\n        setView(!viewScoreBoard);\n    };\n    const [state, setState] = useState({\n        eventName: \"\",\n        desc: \"\",\n        venue: \"\",\n        dateTime: \"\",\n        participatingCollege: [],\n    });\n\n    const showSuccessMessage = (isSuccess) => {\n        setShowSuccess(true);\n        if (isSuccess) {\n            setSuccessImage(process.env.PUBLIC_URL + \"/images/success.png\");\n        } else {\n            setSuccessImage(process.env.PUBLIC_URL + \"/images/cross.png\");\n        }\n    };\n\n    useEffect(() => {\n        const url =\n            process.env.REACT_APP_API_ENDPOINT +\n            \"event/\" +\n            props.match.params.id;\n        fetch(url)\n            .then(async (res) => {\n                const eventDetails = await res.json();\n                console.log(eventDetails.dateTime);\n                eventDetails[\"scoreboard url\"] = \"/scoreboard/\";\n                eventDetails[\"scoreboard url\"] = eventDetails[\n                    \"scoreboard url\"\n                ].concat(props.match.params.id);\n\n                const collegedata = eventDetails.participatingCollege.map(\n                    (d) => {\n                        return (\n                            <div className={classes.single_college}>{d}</div>\n                        );\n                    }\n                );\n                eventDetails.participatingCollege = collegedata;\n                setState(eventDetails);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [props.match.params.id]);\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.title}>{state.name}</div>\n            <div className={classes.desc}>{state.desc}</div>\n            <div className={classes.venue}>\n                <GoLocation />\n                {state.venue}\n            </div>\n            <div className={classes.time_and_date}>{state.dateTime}</div>\n            <div className={classes.participating_college}>\n                {state.participatingCollege}\n            </div>\n            <div className={classes.btns}>\n                {/* <Link to='/scoreboard/eventid'> */}\n                <button\n                    onClick={updateView}\n                    className={classes.view_scoreboard}\n                >\n                    View ScoreBoard\n                </button>\n                {/* </Link> */}\n                <button\n                    className={classes.report}\n                    onClick={() => togglePopup(true)}\n                >\n                    Report Event\n                </button>\n                {showPopup ? (\n                    <div className={classes.popup}>\n                        <div className={classes.popup_inner}>\n                            {/* <h1>{this.props.text}</h1> */}\n                            {showSuccess ? (\n                                <div className={classes.succes_image}>\n                                    <img src={successImage} alt=\"\" />\n                                </div>\n                            ) : (\n                                <Report\n                                    showSuccessMessage={showSuccessMessage}\n                                />\n                            )}\n                            <button\n                                className={classes.close}\n                                onClick={() => togglePopup(false)}\n                            >\n                                Close\n                            </button>\n                        </div>\n                    </div>\n                ) : null}\n            </div>\n            {viewScoreBoard ? (\n                <Scoreboard eventid={props.match.params.id} />\n            ) : null}\n        </div>\n    );\n};\n\nexport default EventDetail;\n"]},"metadata":{},"sourceType":"module"}