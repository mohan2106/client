[{"/home/mohan/dev/react/iims/client/src/index.js":"1","/home/mohan/dev/react/iims/client/src/components/App.js":"2","/home/mohan/dev/react/iims/client/src/components/Authentication/LoginPage.js":"3","/home/mohan/dev/react/iims/client/src/components/Footer/Footer.js":"4","/home/mohan/dev/react/iims/client/src/components/Navbar/Navbar.js":"5","/home/mohan/dev/react/iims/client/src/components/EventsPage/EventsPage.js":"6","/home/mohan/dev/react/iims/client/src/components/AddEvent/AddEvent.js":"7","/home/mohan/dev/react/iims/client/src/components/QueryCounterPage/QueryPage.js":"8","/home/mohan/dev/react/iims/client/src/components/HomePage/Home.js":"9","/home/mohan/dev/react/iims/client/src/components/EventDetailPage/EventDetail.js":"10","/home/mohan/dev/react/iims/client/src/components/Scoreboard/Scoreboard.js":"11","/home/mohan/dev/react/iims/client/src/components/Button/Button.js":"12","/home/mohan/dev/react/iims/client/src/components/Authentication/Login.js":"13","/home/mohan/dev/react/iims/client/src/components/Authentication/Signup.js":"14","/home/mohan/dev/react/iims/client/src/components/SuccessError/SuccessError.js":"15","/home/mohan/dev/react/iims/client/src/components/QueryCounterPage/Single/Single.js":"16","/home/mohan/dev/react/iims/client/src/components/HomePage/Data.js":"17","/home/mohan/dev/react/iims/client/src/components/Colleges/Colleges.js":"18","/home/mohan/dev/react/iims/client/src/components/Events/Events.js":"19","/home/mohan/dev/react/iims/client/src/components/ImageTextComponent/TextImageComponent.js":"20","/home/mohan/dev/react/iims/client/src/components/AskQuery/AskQuery.js":"21","/home/mohan/dev/react/iims/client/src/components/Events/Single/Single.js":"22","/home/mohan/dev/react/client/src/index.js":"23","/home/mohan/dev/react/client/src/components/App.js":"24","/home/mohan/dev/react/client/src/components/Navbar/Navbar.js":"25","/home/mohan/dev/react/client/src/components/HomePage/Home.js":"26","/home/mohan/dev/react/client/src/components/EventsPage/EventsPage.js":"27","/home/mohan/dev/react/client/src/components/Authentication/LoginPage.js":"28","/home/mohan/dev/react/client/src/components/QueryCounterPage/QueryPage.js":"29","/home/mohan/dev/react/client/src/components/Footer/Footer.js":"30","/home/mohan/dev/react/client/src/components/Scoreboard/Scoreboard.js":"31","/home/mohan/dev/react/client/src/components/AddEvent/AddEvent.js":"32","/home/mohan/dev/react/client/src/components/EventDetailPage/EventDetail.js":"33","/home/mohan/dev/react/client/src/components/Button/Button.js":"34","/home/mohan/dev/react/client/src/components/HomePage/Data.js":"35","/home/mohan/dev/react/client/src/components/Authentication/Login.js":"36","/home/mohan/dev/react/client/src/components/Authentication/Signup.js":"37","/home/mohan/dev/react/client/src/components/ImageTextComponent/TextImageComponent.js":"38","/home/mohan/dev/react/client/src/components/Events/Events.js":"39","/home/mohan/dev/react/client/src/components/Colleges/Colleges.js":"40","/home/mohan/dev/react/client/src/components/QueryCounterPage/Single/Single.js":"41","/home/mohan/dev/react/client/src/components/SuccessError/SuccessError.js":"42","/home/mohan/dev/react/client/src/components/AskQuery/AskQuery.js":"43","/home/mohan/dev/react/client/src/components/Events/Single/Single.js":"44"},{"size":231,"mtime":1617893482286,"results":"45","hashOfConfig":"46"},{"size":1643,"mtime":1617893482270,"results":"47","hashOfConfig":"46"},{"size":792,"mtime":1617893482270,"results":"48","hashOfConfig":"46"},{"size":4806,"mtime":1617893482274,"results":"49","hashOfConfig":"46"},{"size":5504,"mtime":1617893482274,"results":"50","hashOfConfig":"46"},{"size":1914,"mtime":1617893482274,"results":"51","hashOfConfig":"46"},{"size":15913,"mtime":1617893482270,"results":"52","hashOfConfig":"46"},{"size":15084,"mtime":1617893482274,"results":"53","hashOfConfig":"46"},{"size":1430,"mtime":1617956651253,"results":"54","hashOfConfig":"46"},{"size":8474,"mtime":1617966662681,"results":"55","hashOfConfig":"46"},{"size":8061,"mtime":1617956705790,"results":"56","hashOfConfig":"46"},{"size":767,"mtime":1617893482270,"results":"57","hashOfConfig":"46"},{"size":3060,"mtime":1617893482270,"results":"58","hashOfConfig":"46"},{"size":11083,"mtime":1617893482270,"results":"59","hashOfConfig":"46"},{"size":2122,"mtime":1617893482274,"results":"60","hashOfConfig":"46"},{"size":1320,"mtime":1617893482274,"results":"61","hashOfConfig":"46"},{"size":396,"mtime":1617893482274,"results":"62","hashOfConfig":"46"},{"size":3488,"mtime":1617893482270,"results":"63","hashOfConfig":"46"},{"size":865,"mtime":1617893482274,"results":"64","hashOfConfig":"46"},{"size":1885,"mtime":1617893482274,"results":"65","hashOfConfig":"46"},{"size":14732,"mtime":1617893482270,"results":"66","hashOfConfig":"46"},{"size":409,"mtime":1617893482274,"results":"67","hashOfConfig":"46"},{"size":231,"mtime":1617893482286,"results":"68","hashOfConfig":"69"},{"size":1643,"mtime":1617893482270,"results":"70","hashOfConfig":"69"},{"size":5504,"mtime":1617893482274,"results":"71","hashOfConfig":"69"},{"size":1430,"mtime":1617956651253,"results":"72","hashOfConfig":"69"},{"size":1914,"mtime":1617893482274,"results":"73","hashOfConfig":"69"},{"size":792,"mtime":1617893482270,"results":"74","hashOfConfig":"69"},{"size":15084,"mtime":1617893482274,"results":"75","hashOfConfig":"69"},{"size":4806,"mtime":1617893482274,"results":"76","hashOfConfig":"69"},{"size":8061,"mtime":1617956705790,"results":"77","hashOfConfig":"69"},{"size":15913,"mtime":1617893482270,"results":"78","hashOfConfig":"69"},{"size":8474,"mtime":1617966662681,"results":"79","hashOfConfig":"69"},{"size":767,"mtime":1617893482270,"results":"80","hashOfConfig":"69"},{"size":396,"mtime":1617893482274,"results":"81","hashOfConfig":"69"},{"size":3060,"mtime":1617893482270,"results":"82","hashOfConfig":"69"},{"size":11083,"mtime":1617893482270,"results":"83","hashOfConfig":"69"},{"size":1885,"mtime":1617893482274,"results":"84","hashOfConfig":"69"},{"size":865,"mtime":1617893482274,"results":"85","hashOfConfig":"69"},{"size":3488,"mtime":1617893482270,"results":"86","hashOfConfig":"69"},{"size":1320,"mtime":1617893482274,"results":"87","hashOfConfig":"69"},{"size":2122,"mtime":1617893482274,"results":"88","hashOfConfig":"69"},{"size":14732,"mtime":1617893482270,"results":"89","hashOfConfig":"69"},{"size":409,"mtime":1617893482274,"results":"90","hashOfConfig":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1eyjg78",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yjhojy",{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mohan/dev/react/iims/client/src/index.js",[],"/home/mohan/dev/react/iims/client/src/components/App.js",[],"/home/mohan/dev/react/iims/client/src/components/Authentication/LoginPage.js",[],"/home/mohan/dev/react/iims/client/src/components/Footer/Footer.js",["185","186"],"import React from \"react\";\nimport \"./Footer.css\";\nimport { Button } from \"../Button/Button\";\nimport { Link } from \"react-router-dom\";\nimport {\n    FaFacebook,\n    FaInstagram,\n    FaYoutube,\n    FaTwitter,\n    FaLinkedin,\n} from \"react-icons/fa\";\nimport { MdFingerprint } from \"react-icons/md\";\n\nfunction Footer() {\n    return (\n        <div className=\"footer-container\">\n            {/* <section className='footer-subscription'>\n        <p className='footer-subscription-heading'>\n          Join our exclusive membership to receive the latest news and trends\n        </p>\n        <p className='footer-subscription-text'>\n          You can unsubscribe at any time.\n        </p>\n        <div className='input-areas'>\n          <form>\n            <input\n              className='footer-input'\n              name='email'\n              type='email'\n              placeholder='Your Email'\n            />\n            <Button buttonStyle='btn--outline'>Subscribe</Button>\n          </form>\n        </div>\n      </section> */}\n            <div className=\"footer-links\">\n                <div className=\"footer-link-wrapper\">\n                    {/* <div className='footer-link-items'>\n            <h2>About Us</h2>\n            <Link to='/sign-up'>How it works</Link>\n            <Link to='/'>Testimonials</Link>\n            <Link to='/'>Careers</Link>\n            <Link to='/'>Investors</Link>\n            <Link to='/'>Terms of Service</Link>\n          </div> */}\n                    <div className=\"footer-link-items\">\n                        <h2>Contact Us</h2>\n                        <Link to=\"/\">Contact</Link>\n                        <Link to=\"/\">Support</Link>\n                        <Link to=\"/\">Destinations</Link>\n                        <Link to=\"/\">Sponsorships</Link>\n                    </div>\n                </div>\n                <div className=\"footer-link-wrapper\">\n                    {/* <div className='footer-link-items'>\n            <h2>Videos</h2>\n            <Link to='/'>Submit Video</Link>\n            <Link to='/'>Ambassadors</Link>\n            <Link to='/'>Agency</Link>\n            <Link to='/'>Influencer</Link>\n          </div> */}\n                    <div className=\"footer-link-items\">\n                        <h2>Social Media</h2>\n                        <Link to=\"/\">Instagram</Link>\n                        <Link to=\"/\">Facebook</Link>\n                        <Link to=\"/\">Youtube</Link>\n                        <Link to=\"/\">Twitter</Link>\n                    </div>\n                </div>\n            </div>\n            <section className=\"social-media\">\n                <div className=\"social-media-wrap\">\n                    <div className=\"footer-logo\">\n                        <Link to=\"/\" className=\"social-logo\">\n                            {/* <img src={process.env.PUBLIC_URL + '/Images/logo.svg'} className=\"navbar-icon\" alt=\"logo\" /> */}\n                            IIMS\n                        </Link>\n                    </div>\n                    <small className=\"website-rights\">IIMS &copy; 2021</small>\n                    <div className=\"social-icons\">\n                        <Link\n                            className=\"social-icon-link\"\n                            to=\"/\"\n                            target=\"_blank\"\n                            aria-label=\"Facebook\"\n                        >\n                            <FaFacebook />\n                        </Link>\n                        <Link\n                            className=\"social-icon-link\"\n                            to=\"/\"\n                            target=\"_blank\"\n                            aria-label=\"Instagram\"\n                        >\n                            <FaInstagram />\n                        </Link>\n                        <Link\n                            className=\"social-icon-link\"\n                            to={\"\"}\n                            target=\"_blank\"\n                            aria-label=\"Youtube\"\n                        >\n                            <FaYoutube />\n                        </Link>\n                        <Link\n                            className=\"social-icon-link\"\n                            to=\"/\"\n                            target=\"_blank\"\n                            aria-label=\"Twitter\"\n                        >\n                            <FaTwitter />\n                        </Link>\n                        <Link\n                            className=\"social-icon-link\"\n                            to=\"/\"\n                            target=\"_blank\"\n                            aria-label=\"LinkedIn\"\n                        >\n                            <FaLinkedin />\n                        </Link>\n                    </div>\n                </div>\n            </section>\n        </div>\n    );\n}\n\nexport default Footer;\n","/home/mohan/dev/react/iims/client/src/components/Navbar/Navbar.js",[],"/home/mohan/dev/react/iims/client/src/components/EventsPage/EventsPage.js",[],"/home/mohan/dev/react/iims/client/src/components/AddEvent/AddEvent.js",["187"],"import React, { Component } from \"react\";\nimport classes from \"./AddEvent.module.css\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport { Button } from \"../Button/Button\";\nimport SuccessError from \"../SuccessError/SuccessError\";\n\nclass AddEvent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            nameValid: false,\n            venue: \"\",\n            venueValid: false,\n            dateTime: new Date(),\n            dateTimeValid: true,\n            shortDesc: \"\",\n            shortDescValid: false,\n            desc: \"\",\n            descValid: false,\n            showPopup: false,\n            successErrorPopup: false,\n            successErrorMessage: \"\",\n            collegeOptions: [\n                { name: \"IIT Guwahati\", id: 1 },\n                { name: \"IIT Bombay\", id: 2 },\n                { name: \"IIT Delhi\", id: 3 },\n                { name: \"IIT Madras\", id: 4 },\n                { name: \"IIT Kanpur\", id: 5 },\n                { name: \"IIT Kharagpur\", id: 6 },\n                { name: \"IIT Roorkee\", id: 7 },\n                { name: \"IIT Indore\", id: 8 },\n                { name: \"IIT Hydrabad\", id: 9 },\n                { name: \"IIT Patna\", id: 10 },\n                { name: \"IIT Mandi\", id: 11 },\n            ],\n            selectedValue: [],\n            formValid: false,\n            submitted: false,\n            errorMessage: {\n                name: \"\",\n                shortDesc: \"\",\n                form: \"\",\n                venue: \"\",\n                date: \"\",\n                desc: \"\",\n                dateTime: \"\",\n            },\n        };\n    }\n    async validateForm() {\n        if (\n            this.state.nameValid &&\n            this.state.shortDescValid &&\n            this.state.dateTimeValid &&\n            this.state.venueValid &&\n            this.state.descValid &&\n            this.state.selectedValue.length > 1\n        ) {\n            await this.setState({\n                formValid: true,\n            });\n        } else {\n            let errMsg = { ...this.state.errorMessage };\n            errMsg.form = \"Form is invalid\";\n            await this.setState({\n                formValid: false,\n                errorMessage: errMsg,\n            });\n        }\n    }\n    async updateName(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        if (data.length > 0) {\n            await this.setState({\n                name: data,\n                nameValid: true,\n            });\n        } else {\n            errorMsg.name = \"Name is required!\";\n            await this.setState({\n                name: data,\n                nameValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        await this.validateForm();\n    }\n\n    async updateShortDesc(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        if (data.length > 0) {\n            await this.setState({\n                shortDesc: data,\n                shortDescValid: true,\n            });\n        } else {\n            errorMsg.shortDesc = \"Short Desc is required!\";\n            await this.setState({\n                shortDesc: data,\n                shortDescValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        this.validateForm();\n    }\n\n    async updateDateTime(data) {\n        console.log(data);\n        let errorMsg = { ...this.state.errorMessage };\n        if (data === undefined || data === null) {\n            errorMsg.dateTime = \"Date and Time are required!\";\n            await this.setState({\n                dateTime: data,\n                dateTimeValid: false,\n                errorMessage: errorMsg,\n            });\n        } else if (data - new Date() < 0) {\n            errorMsg.dateTime = \"Date and Time are in the past!\";\n            await this.setState({\n                dateTime: data,\n                dateTimeValid: false,\n                errorMessage: errorMsg,\n            });\n        } else {\n            await this.setState({\n                dateTime: data,\n                dateTimeValid: true,\n            });\n        }\n        this.validateForm();\n    }\n\n    async updateVenue(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        if (data.length > 0) {\n            await this.setState({\n                venue: data,\n                venueValid: true,\n            });\n        } else {\n            errorMsg.venue = \"Venue is required!\";\n            await this.setState({\n                venue: data,\n                venueValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        await this.validateForm();\n    }\n\n    async updateDesc(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        if (data.length > 0) {\n            await this.setState({\n                desc: data,\n                descValid: true,\n            });\n        } else {\n            errorMsg.desc = \"Desc is required!\";\n            await this.setState({\n                desc: data,\n                descValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        this.validateForm();\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        await this.validateForm();\n        const popupDelay = 1 * 1000;\n        if (this.state.formValid === true && this.state.submitted === false) {\n            let colleges = [];\n            console.log(this.state);\n            this.state.selectedValue.forEach((college) => {\n                colleges.push(college.name);\n            });\n            this.setState({\n                submitted: true,\n            });\n\n            const url = process.env.REACT_APP_API_ENDPOINT + \"event/\";\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    name: this.state.name,\n                    shortDesc: this.state.shortDesc,\n                    venue: this.state.venue,\n                    dateTime: this.state.dateTime,\n                    desc: this.state.desc,\n                    participatingCollege: colleges,\n                }),\n            }).then(async () => {\n                await this.setState({\n                    name: \"\",\n                    nameValid: false,\n                    shortDesc: \"\",\n                    shortDescValid: false,\n                    venue: \"\",\n                    venueValid: false,\n                    dateTime: new Date(),\n                    dateTimeValid: true,\n                    desc: \"\",\n                    descValid: false,\n                    formValid: false,\n                    submitted: false,\n                    showPopup: true,\n                    successErrorPopup: true,\n                    successErrorMessage: \"Event Created Successfully\",\n                    selectedValue: [],\n                    errorMessage: {\n                        name: \"\",\n                        shortDesc: \"\",\n                        category: \"\",\n                        query: \"\",\n                        form: \"\",\n                        dateTime: \"\",\n                    },\n                });\n            });\n        } else {\n            let errMsg = { ...this.state.errorMessage };\n            errMsg.form = \"Form is invalid\";\n            await this.setState({\n                errorMessage: errMsg,\n                showPopup: true,\n                successErrorPopup: false,\n                successErrorMessage: \"Event could not be created\",\n            });\n        }\n    }\n    async onSelect(selectedList, selectedItem) {\n        await this.setState({ selectedValue: selectedList });\n        console.log(this.state.selectedValue);\n        this.validateForm();\n    }\n    async onRemove(selectedList, removedItem) {\n        await this.setState({ selectedValue: selectedList });\n        console.log(this.state.selectedValue);\n        this.validateForm();\n    }\n    render() {\n        return (\n            <div className={classes.container}>\n                <h1 className={classes.title}>Add Events</h1>\n                <form\n                    action=\"#\"\n                    id=\"js-form\"\n                    className={classes.form}\n                    onSubmit={this.handleSubmit.bind(this)}\n                >\n                    <ValidationMessage\n                        valid={this.state.formValid}\n                        message={this.state.errorMessage.form}\n                    />\n                    {/* name */}\n                    <div className={classes.form_group}>\n                        <div className={classes.container_label}>\n                            <label className={classes.label} htmlFor=\"Name\">\n                                Name Of Event\n                            </label>\n                            <ValidationMessage\n                                valid={this.state.nameValid}\n                                message={this.state.errorMessage.name}\n                            />\n                        </div>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            className={classes.form_field}\n                            value={this.state.name}\n                            onChange={(e) => this.updateName(e.target.value)}\n                            placeholder=\"Input the Event Name\"\n                        />\n                    </div>\n                    {/* Short Description */}\n                    <div className={classes.form_group}>\n                        <div className={classes.container_label}>\n                            <label\n                                className={classes.label}\n                                htmlFor=\"shortDesc\"\n                            >\n                                Short Description\n                            </label>\n                            <ValidationMessage\n                                valid={this.state.shortDescValid}\n                                message={this.state.errorMessage.shortDesc}\n                            />\n                        </div>\n                        <input\n                            type=\"text\"\n                            id=\"shortDesc\"\n                            name=\"shortDesc\"\n                            className={classes.form_field}\n                            value={this.state.shortDesc}\n                            onChange={(e) =>\n                                this.updateShortDesc(e.target.value)\n                            }\n                            placeholder=\"Input the Short Description of Event\"\n                        />\n                    </div>\n                    {/* venue */}\n                    <div className={classes.form_group}>\n                        <div className={classes.container_label}>\n                            <label className={classes.label} htmlFor=\"venue\">\n                                Venue Of Event\n                            </label>\n                            <ValidationMessage\n                                valid={this.state.venueValid}\n                                message={this.state.errorMessage.venue}\n                            />\n                        </div>\n                        <input\n                            type=\"text\"\n                            id=\"venue\"\n                            name=\"venue\"\n                            className={classes.form_field}\n                            value={this.state.value}\n                            onChange={(e) => this.updateVenue(e.target.value)}\n                            placeholder=\"Input the Venue of Event\"\n                        />\n                    </div>\n                    {/* Date and Time */}\n                    <div className={classes.form_group}>\n                        <div className={classes.container_label}>\n                            <label\n                                className={classes.label}\n                                htmlFor=\"Date and Time\"\n                            >\n                                Date and Time\n                            </label>\n                            <ValidationMessage\n                                valid={this.state.dateTimeValid}\n                                message={this.state.errorMessage.dateTime}\n                            />\n                        </div>\n                        <DateTimePicker\n                            onChange={(e) => this.updateDateTime(e)}\n                            value={this.state.dateTime}\n                        />\n                    </div>\n                    {/* Description */}\n                    <div className={classes.form_group}>\n                        <div className={classes.container_label}>\n                            <label className={classes.label} htmlFor=\"desc\">\n                                Event Description\n                            </label>\n                            <ValidationMessage\n                                valid={this.state.descValid}\n                                message={this.state.errorMessage.desc}\n                            />\n                        </div>\n                        <textarea\n                            type=\"text\"\n                            id=\"desc\"\n                            name=\"desc\"\n                            className={classes.form_field}\n                            value={this.state.desc}\n                            onChange={(e) => this.updateDesc(e.target.value)}\n                            placeholder=\"Input the Description of Event\"\n                            rows=\"5\"\n                        />\n                    </div>\n                    {/* Participating College */}\n                    <div className={classes.form_group}>\n                        <label className={classes.label} htmlFor=\"Venue\">\n                            Select Participating College\n                        </label>\n                        <Multiselect\n                            options={this.state.collegeOptions} // Options to display in the dropdown\n                            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\n                            onSelect={(a, b) => this.onSelect(a, b)} // Function will trigger on select event\n                            onRemove={(a, b) => this.onRemove(a, b)} // Function will trigger on remove event\n                            displayValue=\"name\" // Property name to display in the dropdown options\n                        />\n                    </div>\n                    {/* Submit */}\n                    <div className={classes.btn}>\n                        <Button\n                            buttonStyle=\"btn--rounded-dark\"\n                            type=\"submit\"\n                            disabled={!this.state.formValid}\n                        >\n                            Add Event\n                        </Button>\n                    </div>\n                </form>\n                {this.state.showPopup && (\n                    <div>\n                        <SuccessError\n                            show={true}\n                            success={this.state.successErrorPopup}\n                            message={this.state.successErrorMessage}\n                            closePopup={async () => {\n                                await this.setState({\n                                    showPopup: false,\n                                });\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return <p className={classes.error_msg}>{props.message}</p>;\n    }\n    return null;\n}\n\nexport default AddEvent;\n","/home/mohan/dev/react/iims/client/src/components/QueryCounterPage/QueryPage.js",[],"/home/mohan/dev/react/iims/client/src/components/HomePage/Home.js",["188"],"import React from 'react';\nimport {homeObjOne} from './Data';\nimport TextImageComponent from '../ImageTextComponent/TextImageComponent';\nimport Events from '../Events/Events';\nimport Query from '../AskQuery/AskQuery';\nimport Colleges from '../Colleges/Colleges';\n\nconst Home = ()=>{\n    const wwd=[\n        {\n            img:process.env.PUBLIC_URL + '/images/atheletcs.svg',\n            title:'Atheletics',\n            desc:'Inter IIT Atheletic game'\n        },\n        {\n            img: process.env.PUBLIC_URL + '/images/football.svg',\n            title:'Football',\n            desc:'Inter IIT Football tournament'\n        },\n        {\n            img: process.env.PUBLIC_URL + '/images/movies.svg',\n            title:'Entertainment',\n            desc:'Inter IIT Fun and Entertainment Event'\n        },\n        {\n            img: process.env.PUBLIC_URL + '/images/techmeet.svg',\n            title:'Tech Meet',\n            desc:'Inter IIT Tech Meet'\n        },\n        \n    ];\n    return (\n        <div>\n            <section id='home'>\n                <TextImageComponent {...homeObjOne}/>\n            </section>\n            <section id='events'>\n                <Events wwd={wwd}/>\n            </section>\n            {/* <section id='colleges'>\n                <Colleges />\n            </section> */}\n            <section id='query'>\n                <Query />\n            </section>\n        </div>\n    );\n}\n\nexport default Home;","/home/mohan/dev/react/iims/client/src/components/EventDetailPage/EventDetail.js",[],"/home/mohan/dev/react/iims/client/src/components/Scoreboard/Scoreboard.js",[],"/home/mohan/dev/react/iims/client/src/components/Button/Button.js",["189","190","191"],"import React from 'react';\nimport './Button.css';\n\nconst STYLES = ['btn--primary','btn--outline','btn--rounded','btn--rounded-dark'];   \n\nconst SIZES = ['btn--medium', 'btn--large','btn--mobile','btn--wide'];\nconst COLOR = ['primary','blue','red','green'];\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize,\n    buttonColor\n}) => {\n    // const checkButtonColor = COLOR.includes(buttonColor)? buttonColor : null;\n    // const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : null;\n    // const checkButtonStyle = STYLES.includes(buttonStyle)? buttonStyle : STYLES[0];\n    return (\n    <button className={`btn ${buttonStyle} ${buttonSize} ${buttonColor}`} onClick={onClick} type={type}>{children}</button>\n    )\n}","/home/mohan/dev/react/iims/client/src/components/Authentication/Login.js",[],"/home/mohan/dev/react/iims/client/src/components/Authentication/Signup.js",[],"/home/mohan/dev/react/iims/client/src/components/SuccessError/SuccessError.js",[],"/home/mohan/dev/react/iims/client/src/components/QueryCounterPage/Single/Single.js",[],"/home/mohan/dev/react/iims/client/src/components/HomePage/Data.js",[],"/home/mohan/dev/react/iims/client/src/components/Colleges/Colleges.js",[],"/home/mohan/dev/react/iims/client/src/components/Events/Events.js",[],"/home/mohan/dev/react/iims/client/src/components/ImageTextComponent/TextImageComponent.js",["192"],"import React from 'react';\nimport classes from './TextImageComponent.module.css';\nimport { Button } from '../Button/Button';\nimport { Link } from 'react-router-dom';\nimport {Link as Link1} from 'react-scroll';\n\n\nfunction TextImageComponent({\n  light,\n  topLine,\n  headline,\n  description,\n  buttonLabel,\n  img,\n  alt,\n  imgStart\n}) {\n  return (\n    <>\n      <div\n        className={light ? 'home__hero_section' : 'home__her_section darkBg'}\n      >\n        <div className={classes.container}>\n          <div\n            className={`${classes.row} ${classes.home__hero_row}`}\n            style={{\n              display: 'flex',\n              flexDirection: imgStart === 'start' ? 'row-reverse' : 'row'\n            }}\n          >\n            <div className={classes.col}>\n              <div className={classes.home__hero_text_wrapper}>\n                <div className={classes.top_line}>{topLine}</div>\n                <h1 className={light ? `${classes.heading} ${classes.dark}` : classes.heading}>\n                  {headline}\n                </h1>\n                <p\n                  className={\n                    light\n                      ? `${classes.home__hero_subtitle} ${classes.black}`\n                      : classes.home__hero_subtitle\n                  }\n                >\n                  {description}\n                </p>\n                <Link to='/scoreboard'>\n                  <Button buttonStyle='btn--rounded-dark' >\n                    {buttonLabel}\n                  </Button>\n                </Link>\n              </div>\n            </div>\n            <div className={classes.col}>\n              <div className={classes.home__hero_img_wrapper}>\n                <img src={img} alt={alt} className={classes.home__hero_img} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TextImageComponent;\n","/home/mohan/dev/react/iims/client/src/components/AskQuery/AskQuery.js",["193"],"import React, { Component } from \"react\";\nimport classes from \"./AskQuery.module.css\";\nimport Single from \"../QueryCounterPage/Single/Single\";\nimport SuccessError from \"../SuccessError/SuccessError\";\n\nconst faqs = [\n    {\n        ques: \"Where is Dance competetion hosted?\",\n        answer:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Tempore cupiditate, quasi ex eum nihil rerum exercitationem nesciunt odio placeat veniam doloremque voluptatibus eveniet animi iusto voluptas illo velit, at eligendi?\",\n    },\n    {\n        ques: \"My friend is not from IIT, Can he participate in cricket match?\",\n        answer:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Tempore cupiditate, quasi ex eum nihil rerum exercitationem nesciunt odio placeat veniam doloremque voluptatibus eveniet animi iusto voluptas illo velit, at eligendi?\",\n    },\n    {\n        ques: \"Can I get snacks in the event?\",\n        answer:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Tempore cupiditate, quasi ex eum nihil rerum exercitationem nesciunt odio placeat veniam doloremque voluptatibus eveniet animi iusto voluptas illo velit, at eligendi?\",\n    },\n    {\n        ques: \"Where to visit in case of medical emergency?\",\n        answer:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Tempore cupiditate, quasi ex eum nihil rerum exercitationem nesciunt odio placeat veniam doloremque voluptatibus eveniet animi iusto voluptas illo velit, at eligendi?\",\n    },\n    {\n        ques:\n            \"I have registered for the event and will not be able to play due to some reason, what to do?\",\n        answer:\n            \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Tempore cupiditate, quasi ex eum nihil rerum exercitationem nesciunt odio placeat veniam doloremque voluptatibus eveniet animi iusto voluptas illo velit, at eligendi?\",\n    },\n];\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return <p className={classes.error_msg}>{props.message}</p>;\n    }\n    return null;\n}\n\nclass AskQuery extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            kidlogo: process.env.PUBLIC_URL + \"/images/query.svg\",\n            username: \"\",\n            usernameValid: false,\n            categories: [\n                \"Category 1\",\n                \"Category 2\",\n                \"Category 3\",\n                \"Category 4\",\n                \"Category 5\",\n                \"Category 6\",\n            ],\n            category: \"Category 1\",\n            categoryValid: true,\n            query: \"\",\n            queryValid: false,\n            formValid: false,\n            submitted: false,\n            showPastQuery: false,\n            btnText: \"Show Past Query\",\n            showPopup: false,\n            successErrorPopup: false,\n            successErrorMessage: \"\",\n            errorMessage: {\n                username: \"\",\n                category: \"\",\n                query: \"\",\n                form: \"\",\n            },\n        };\n    }\n\n    async validateForm() {\n        if (\n            this.state.usernameValid === true &&\n            this.state.categoryValid === true &&\n            this.state.queryValid === true\n        ) {\n            await this.setState({\n                formValid: true,\n            });\n        } else {\n            let errMsg = { ...this.state.errorMessage };\n            errMsg.form = \"Form is invalid\";\n            await this.setState({\n                formValid: false,\n                errorMessage: errMsg,\n            });\n        }\n    }\n    async updateUsername(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        if (data.length > 0) {\n            await this.setState({\n                username: data,\n                usernameValid: true,\n            });\n        } else {\n            errorMsg.username = \"Name is required!\";\n            await this.setState({\n                username: data,\n                usernameValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        await this.validateForm();\n    }\n\n    getCategoryOptions() {\n        let options = [];\n        this.state.categories.forEach((category) => {\n            options.push(<option value={category}>{category}</option>);\n        });\n        return options;\n    }\n\n    async updateCategory(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        console.log(data);\n        if (data.length > 0 && this.state.categories.includes(data) === true) {\n            await this.setState({\n                category: data,\n                categoryValid: true,\n            });\n        } else {\n            errorMsg.category = \"Category is required!\";\n            await this.setState({\n                category: data,\n                categoryValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        await this.validateForm();\n    }\n\n    async updateQuery(data) {\n        let errorMsg = { ...this.state.errorMessage };\n        if (data.length > 0) {\n            await this.setState({\n                query: data,\n                queryValid: true,\n            });\n        } else {\n            errorMsg.query = \"Query is required!\";\n            await this.setState({\n                query: data,\n                queryValid: false,\n                errorMessage: errorMsg,\n            });\n        }\n        this.validateForm();\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        await this.validateForm();\n        const popupDelay = 15 * 1000;\n        if (this.state.formValid === true && this.state.submitted === false) {\n            this.setState({\n                submitted: true,\n            });\n\n            const url = process.env.REACT_APP_API_ENDPOINT + \"query/\";\n\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    category: this.state.category,\n                    query: this.state.query,\n                }),\n            }).then(async () => {\n                await this.setState({\n                    username: \"\",\n                    usernameValid: false,\n                    category: \"\",\n                    categoryValid: true,\n                    query: \"\",\n                    queryValid: false,\n                    formValid: false,\n                    submitted: false,\n                    showPopup: true,\n                    successErrorPopup: true,\n                    successErrorMessage: \"Query Posted Successfully\",\n                    errorMessage: {\n                        username: \"\",\n                        category: \"\",\n                        query: \"\",\n                        form: \"\",\n                    },\n                });\n            });\n        } else {\n            let errMsg = { ...this.state.errorMessage };\n            errMsg.form = \"Form is invalid\";\n            await this.setState({\n                errorMessage: errMsg,\n                showPopup: true,\n                successErrorPopup: false,\n                successErrorMessage: \"Query could not be posted\",\n            });\n        }\n    }\n\n    async updateBtn() {\n        if (!this.state.showPastQuery) {\n            await this.setState({\n                btnText: \"Close Past Query\",\n                showPastQuery: !this.state.showPastQuery,\n            });\n        } else {\n            await this.setState({\n                btnText: \"Show Past Query\",\n                showPastQuery: !this.state.showPastQuery,\n            });\n        }\n    }\n\n    data = () => {\n        return faqs.map((ele) => {\n            return <Single {...ele} />;\n        });\n    };\n\n    render() {\n        return (\n            <div className={classes.main}>\n                <div\n                    className={classes.container}\n                    style={{\n                        backgroundImage: `url(${\n                            process.env.PUBLIC_URL +\n                            \"/images/CurveBackground.svg\"\n                        })`,\n                    }}\n                >\n                    <div className={classes.item1}>\n                        <h2>Ask Query</h2>\n                        <p>\n                            Do you have any question regarding any Events or\n                            anything to ask from the Event Manager?\n                        </p>\n                        <img src={this.state.kidlogo} alt=\"creative\"></img>\n                    </div>\n                    <div className={classes.item2}>\n                        <form\n                            action=\"#\"\n                            id=\"js-form\"\n                            className={classes.form}\n                            onSubmit={this.handleSubmit.bind(this)}\n                        >\n                            <ValidationMessage\n                                valid={this.state.formValid}\n                                message={this.state.errorMessage.form}\n                            />\n                            {/* Username */}\n                            <div className={classes.form_group}>\n                                <div className={classes.container_label}>\n                                    <label\n                                        className={classes.label}\n                                        htmlFor=\"username\"\n                                    >\n                                        Username\n                                    </label>\n                                    <ValidationMessage\n                                        valid={this.state.usernameValid}\n                                        message={\n                                            this.state.errorMessage.username\n                                        }\n                                    />\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    className={classes.form_field}\n                                    value={this.state.username}\n                                    onChange={(e) =>\n                                        this.updateUsername(e.target.value)\n                                    }\n                                    placeholder=\"Username\"\n                                />\n                            </div>\n                            {/* Category */}\n                            <div className={classes.form_group}>\n                                <div className={classes.container_label}>\n                                    <label\n                                        className={classes.label}\n                                        htmlFor=\"category\"\n                                    >\n                                        Query Category\n                                    </label>\n                                    <ValidationMessage\n                                        valid={this.state.categoryValid}\n                                        message={\n                                            this.state.errorMessage.category\n                                        }\n                                    />\n                                </div>\n                                <select\n                                    name=\"category\"\n                                    id=\"category\"\n                                    className={classes.form_field}\n                                    value={this.state.category}\n                                    onChange={(e) =>\n                                        this.updateCategory(e.target.value)\n                                    }\n                                >\n                                    {this.getCategoryOptions()}\n                                </select>\n                            </div>\n                            {/* Query */}\n                            <div className={classes.form_group}>\n                                <div className={classes.container_label}>\n                                    <label\n                                        className={classes.label}\n                                        htmlFor=\"query\"\n                                    >\n                                        Query\n                                    </label>\n                                    <ValidationMessage\n                                        valid={this.state.queryValid}\n                                        message={this.state.errorMessage.query}\n                                    />\n                                </div>\n                                <textarea\n                                    type=\"text\"\n                                    id=\"query\"\n                                    name=\"query\"\n                                    className={classes.form_text_field}\n                                    value={this.state.query}\n                                    onChange={(e) =>\n                                        this.updateQuery(e.target.value)\n                                    }\n                                    column=\"5\"\n                                    placeholder=\"Enter your query here\"\n                                />\n                            </div>\n                            {/* Submit */}\n                            <div className=\"form-controls\">\n                                <button\n                                    className={classes.btn}\n                                    type=\"submit\"\n                                    disabled={!this.state.formValid}\n                                >\n                                    Ask Query\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n                {this.state.showPopup && (\n                    <div>\n                        <SuccessError\n                            show={true}\n                            success={this.state.successErrorPopup}\n                            message={this.state.successErrorMessage}\n                            closePopup={async () => {\n                                await this.setState({\n                                    showPopup: false,\n                                });\n                            }}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\nexport default AskQuery;\n","/home/mohan/dev/react/iims/client/src/components/Events/Single/Single.js",[],"/home/mohan/dev/react/client/src/index.js",[],"/home/mohan/dev/react/client/src/components/App.js",[],"/home/mohan/dev/react/client/src/components/Navbar/Navbar.js",[],"/home/mohan/dev/react/client/src/components/HomePage/Home.js",["194"],"/home/mohan/dev/react/client/src/components/EventsPage/EventsPage.js",[],"/home/mohan/dev/react/client/src/components/Authentication/LoginPage.js",[],"/home/mohan/dev/react/client/src/components/QueryCounterPage/QueryPage.js",[],"/home/mohan/dev/react/client/src/components/Footer/Footer.js",["195","196"],"/home/mohan/dev/react/client/src/components/Scoreboard/Scoreboard.js",[],"/home/mohan/dev/react/client/src/components/AddEvent/AddEvent.js",["197"],"/home/mohan/dev/react/client/src/components/EventDetailPage/EventDetail.js",[],"/home/mohan/dev/react/client/src/components/Button/Button.js",["198","199","200"],"/home/mohan/dev/react/client/src/components/HomePage/Data.js",[],"/home/mohan/dev/react/client/src/components/Authentication/Login.js",[],"/home/mohan/dev/react/client/src/components/Authentication/Signup.js",[],"/home/mohan/dev/react/client/src/components/ImageTextComponent/TextImageComponent.js",["201"],"/home/mohan/dev/react/client/src/components/Events/Events.js",[],"/home/mohan/dev/react/client/src/components/Colleges/Colleges.js",[],"/home/mohan/dev/react/client/src/components/QueryCounterPage/Single/Single.js",[],"/home/mohan/dev/react/client/src/components/SuccessError/SuccessError.js",[],"/home/mohan/dev/react/client/src/components/AskQuery/AskQuery.js",["202"],"/home/mohan/dev/react/client/src/components/Events/Single/Single.js",[],{"ruleId":"203","severity":1,"message":"204","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":16},{"ruleId":"203","severity":1,"message":"207","line":12,"column":10,"nodeType":"205","messageId":"206","endLine":12,"endColumn":23},{"ruleId":"203","severity":1,"message":"208","line":175,"column":15,"nodeType":"205","messageId":"206","endLine":175,"endColumn":25},{"ruleId":"203","severity":1,"message":"209","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":16},{"ruleId":"203","severity":1,"message":"210","line":4,"column":7,"nodeType":"205","messageId":"206","endLine":4,"endColumn":13},{"ruleId":"203","severity":1,"message":"211","line":6,"column":7,"nodeType":"205","messageId":"206","endLine":6,"endColumn":12},{"ruleId":"203","severity":1,"message":"212","line":7,"column":7,"nodeType":"205","messageId":"206","endLine":7,"endColumn":12},{"ruleId":"203","severity":1,"message":"213","line":5,"column":17,"nodeType":"205","messageId":"206","endLine":5,"endColumn":22},{"ruleId":"203","severity":1,"message":"208","line":162,"column":15,"nodeType":"205","messageId":"206","endLine":162,"endColumn":25},{"ruleId":"203","severity":1,"message":"209","line":6,"column":8,"nodeType":"205","messageId":"206","endLine":6,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":3,"column":10,"nodeType":"205","messageId":"206","endLine":3,"endColumn":16},{"ruleId":"203","severity":1,"message":"207","line":12,"column":10,"nodeType":"205","messageId":"206","endLine":12,"endColumn":23},{"ruleId":"203","severity":1,"message":"208","line":175,"column":15,"nodeType":"205","messageId":"206","endLine":175,"endColumn":25},{"ruleId":"203","severity":1,"message":"210","line":4,"column":7,"nodeType":"205","messageId":"206","endLine":4,"endColumn":13},{"ruleId":"203","severity":1,"message":"211","line":6,"column":7,"nodeType":"205","messageId":"206","endLine":6,"endColumn":12},{"ruleId":"203","severity":1,"message":"212","line":7,"column":7,"nodeType":"205","messageId":"206","endLine":7,"endColumn":12},{"ruleId":"203","severity":1,"message":"213","line":5,"column":17,"nodeType":"205","messageId":"206","endLine":5,"endColumn":22},{"ruleId":"203","severity":1,"message":"208","line":162,"column":15,"nodeType":"205","messageId":"206","endLine":162,"endColumn":25},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'MdFingerprint' is defined but never used.","'popupDelay' is assigned a value but never used.","'Colleges' is defined but never used.","'STYLES' is assigned a value but never used.","'SIZES' is assigned a value but never used.","'COLOR' is assigned a value but never used.","'Link1' is defined but never used."]